// <auto-generated />
using System;
using DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DB.Migrations
{
    [DbContext(typeof(WebApiContext))]
    partial class WebApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.Citas", b =>
                {
                    b.Property<int>("Idcita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idcita"));

                    b.Property<DateTime?>("Fechacita")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Idespecialidad")
                        .HasColumnType("int");

                    b.Property<int?>("Idpaciente")
                        .HasColumnType("int");

                    b.HasKey("Idcita");

                    b.HasIndex("Idespecialidad");

                    b.HasIndex("Idpaciente");

                    b.ToTable("Citas", (string)null);
                });

            modelBuilder.Entity("Models.Especialidad", b =>
                {
                    b.Property<int>("Idespecialidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idespecialidad"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Idespecialidad");

                    b.ToTable("Especialidad", (string)null);
                });

            modelBuilder.Entity("Models.Paciente", b =>
                {
                    b.Property<int>("Idpaciente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idpaciente"));

                    b.Property<int?>("Idtipodocumento")
                        .HasColumnType("int");

                    b.Property<string>("NombreCompleto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Idpaciente");

                    b.HasIndex("Idtipodocumento");

                    b.ToTable("Paciente", (string)null);
                });

            modelBuilder.Entity("Models.TipoDocumento", b =>
                {
                    b.Property<int>("Idtipodocumento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idtipodocumento"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Idtipodocumento");

                    b.ToTable("TipoDocumento", (string)null);
                });

            modelBuilder.Entity("Models.Citas", b =>
                {
                    b.HasOne("Models.Especialidad", "Especialidad")
                        .WithMany()
                        .HasForeignKey("Idespecialidad");

                    b.HasOne("Models.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("Idpaciente");

                    b.Navigation("Especialidad");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("Models.Paciente", b =>
                {
                    b.HasOne("Models.TipoDocumento", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("Idtipodocumento");

                    b.Navigation("TipoDocumento");
                });
#pragma warning restore 612, 618
        }
    }
}
